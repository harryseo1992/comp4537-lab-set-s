use("test")

// db.unicorns.insertOne(
//   {
//     name: 'Aurora',
//     gender: 'f',
//     weight: 450
//   }
// )

// db.unicorns.find()

// db.unicorns.getIndexes()

// db.unicorns.insert(
//   {
//     name: 'Leto',
//     gender: 'm',
//     home: 'Arrakeen',
//     worm: false
//   }
// )

// db.unicorns.find()

// db.unicorns.remove({})

// db.unicorns.insert({name: 'Horny',
// 	dob: new Date(1992,2,13,7,47),
// 	loves: ['carrot','papaya'],
// 	weight: 600,
// 	gender: 'm',
// 	vampires: 63});
// db.unicorns.insert({name: 'Aurora',
// 	dob: new Date(1991, 0, 24, 13, 0),
// 	loves: ['carrot', 'grape'],
// 	weight: 450,
// 	gender: 'f',
// 	vampires: 43});
// db.unicorns.insert({name: 'Unicrom',
// 	dob: new Date(1973, 1, 9, 22, 10),
// 	loves: ['energon', 'redbull'],
// 	weight: 984,
// 	gender: 'm',
// 	vampires: 182});
// db.unicorns.insert({name: 'Roooooodles',
// 	dob: new Date(1979, 7, 18, 18, 44),
// 	loves: ['apple'],
// 	weight: 575,
// 	gender: 'm',
// 	vampires: 99});
// db.unicorns.insert({name: 'Solnara',
// 	dob: new Date(1985, 6, 4, 2, 1),
// 	loves:['apple', 'carrot',
// 		'chocolate'],
// 	weight:550,
// 	gender:'f',
// 	vampires:80});
// db.unicorns.insert({name:'Ayna',
// 	dob: new Date(1998, 2, 7, 8, 30),
// 	loves: ['strawberry', 'lemon'],
// 	weight: 733,
// 	gender: 'f',
// 	vampires: 40});
// db.unicorns.insert({name:'Kenny',
// 	dob: new Date(1997, 6, 1, 10, 42),
// 	loves: ['grape', 'lemon'],
// 	weight: 690,
// 	gender: 'm',
// 	vampires: 39});
// db.unicorns.insert({name: 'Raleigh',
// 	dob: new Date(2005, 4, 3, 0, 57),
// 	loves: ['apple', 'sugar'],
// 	weight: 421,
// 	gender: 'm',
// 	vampires: 2});
// db.unicorns.insert({name: 'Leia',
// 	dob: new Date(2001, 9, 8, 14, 53),
// 	loves: ['apple', 'watermelon'],
// 	weight: 601,
// 	gender: 'f',
// 	vampires: 33});
// db.unicorns.insert({name: 'Pilot',
// 	dob: new Date(1997, 2, 1, 5, 3),
// 	loves: ['apple', 'watermelon'],
// 	weight: 650,
// 	gender: 'm',
// 	vampires: 54});
// db.unicorns.insert({name: 'Nimue',
// 	dob: new Date(1999, 11, 20, 16, 15),
// 	loves: ['grape', 'carrot'],
// 	weight: 540,
// 	gender: 'f'});
// db.unicorns.insert({name: 'Dunx',
// 	dob: new Date(1976, 6, 18, 18, 18),
// 	loves: ['grape', 'watermelon'],
// 	weight: 704,
// 	gender: 'm',
// 	vampires: 165});

// find male unicorns with weight greater than 700

// db.unicorns.find(
//   {
//     gender: 'm',
//     weight: {$gt: 700}
//   }
// )
// find unicorns that are not female and weigh greater than or equal to 701
// db.unicorns.find(
//   {
//     gender: {$ne: 'f'},
//     weight: {$gte: 701}
//   }
// )

// using $exists to see if we can find unicorns without vampires

// db.unicorns.find(
//   {
//     vampires: {$exists: false}
//   }
// )

// using $in to find unicorns that match one of several values that we pass as an array

// db.unicorns.find({
//   loves: {$in: ['apple', 'orange']}
// })

// Using $or

// db.unicorns.find({
//   gender: 'f',
//   $or: [
//     {
//       loves: 'apple'
//     },
//     {
//       weight: {$lt: 500}
//     }
//   ]
// })

// Using ObjectiveId to search specific id

// db.unicorns.find({
//   _id: ObjectId("6323bc413c27f4b6d4d0dee6")
// })

// Update

// db.unicorns.update(
//   {name: 'Roooooodles'},
//   {weight: 590}
// )

// db.unicorns.find({name: 'Roooooodles'})

// db.unicorns.update(
//   {weight: 590},
//   {$set: {
//     name: 'Roooooodles',
//     dob: new Date(1979, 7, 18, 18, 44),
//     loves: ['apple'],
//     gender: 'm',
//     vampires: 99
//   }}
// )

// db.unicorns.find({name: 'Roooooodles'})

// db.unicorns.update(
//   {name: 'Pilot'},
//   {$inc: {vampires: -2}}
// )

// db.unicorns.find({name: 'Pilot'})

// Adds sugar into one of her loves with $push

// db.unicorns.update(
//   {name: 'Aurora'},
//   {$push: {loves: 'sugar'}}
// )

// db.unicorns.find({name: 'Aurora'})

// Upsert -> if it exists, updates | if it does not exist, inserts it to database

// db.hits.update(
//   {page: 'unicorns'},
//   {$inc: {hits: 1}}
// )

// db.hits.find();

// db.hits.update(
//   {page: 'unicorns'},
//   {$inc: {hits:1}},
//   {upsert: true}
// )

// db.hits.find()

// db.unicorns.update(
//   {},
//   {$set: {vaccinated: true}}
// )

// db.unicorns.find(
//   {vaccinated: true}
// )

// Doing the above resulted in only Horny getting vaccinated

// To do multiple updates

// db.unicorns.update(
//   {},
//   {$set: {vaccinated: true}},
//   {multi: true}
// )

// db.unicorns.find({vaccinated: true})

// db.unicorns.find(
//   {},
//   {name: 1}
// )

// heaviest first

// db.unicorns.find().sort({weight: -1})

// by unicorn name then vampire kills

// db.unicorns.find().sort(
//   {
//     name: 1,
//     vampires: -1
//   }
// )

// Paging

// Get 2nd and 3rd heaviest unicorns
// sorted by heaviest, limit the result to 2, and then skipped the heaviest

// db.unicorns.find()
//   .sort({weight: -1})
//   .limit(2)
//   .skip(1)

// Count

// db.unicorns.count(
//   {
//     vampires: {$gt: 50}
//   }
// )

db.unicorns.find(
  {
    vampires: {$gt: 50}
  }
).count()